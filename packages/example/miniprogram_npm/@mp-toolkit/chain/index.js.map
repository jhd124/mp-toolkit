{"version":3,"sources":["index.js","setup.js","chain.js","event.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ACFA,AFMA,ACHA;ACFA,AFMA,ACHA;ACFA,ADGA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA,AFMA;ACFA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\n/// <reference path=\"../node_modules/@mp-toolkit/mp-type/index.d.ts\" />\nconst setup_1 = require(\"./setup\");\nexports.setup = setup_1.setup;\n// import * as types from './types'\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = void 0;\nconst chain_1 = require(\"./chain\");\nconst event_1 = require(\"./event\");\nfunction setup(options) {\n    const { eventNames } = options;\n    const eventBus = new event_1.EventBus(eventNames || []);\n    return function chain() {\n        const instance = new chain_1.Chain(eventBus);\n        console.log('instance', instance);\n        return instance;\n    };\n    // const {\n    //   eventNames = []\n    // } = options\n    // if(!eventBus){\n    //   type A = O[\"eventDefine\"] extends undefined ? {} : O[\"eventDefine\"]\n    //   type B = O[\"eventDefine\"] extends undefined ? {} : O[\"eventDefine\"]\n    //   eventBus = new EventBus<B>(eventNames)\n    // }\n    // var c = 0\n    // var e: EventDefine = {onIncrease: (n: number) => {\n    //   c += 0\n    // }}\n}\nexports.setup = setup;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chain = void 0;\nconst event_1 = require(\"./event\");\nfunction getIDGenerator() {\n    let currentCount = 0;\n    return () => currentCount++;\n}\nconst IDGenerator = getIDGenerator();\nclass ComponentTreeNode {\n    constructor(parent) {\n        this.children = [];\n        this.ID = IDGenerator();\n        this.parent = parent;\n    }\n}\nclass Chain {\n    constructor(eventBus) {\n        this.refs = {};\n        this.eventBus = eventBus;\n    }\n    app(option) {\n        this.constructorType = 'App';\n        return new ChainApp(option, this.eventBus);\n    }\n    page(option) {\n        this.constructorType = 'Page';\n        return new ChainPage(Object.assign(Object.assign({}, option), { $eventBus: this.eventBus }), this.eventBus);\n    }\n    component(option) {\n        this.constructorType = 'Component';\n        return new ChainComponent(option, this.eventBus);\n    }\n    // public registerEvents(){\n    // }\n    provide() {\n    }\n    consume() {\n    }\n    debounce() {\n    }\n    throttle() {\n    }\n    registerComponentTreeNode() {\n    }\n    removeComponentTreeNode() {\n    }\n}\nexports.Chain = Chain;\nclass ChainApp {\n    constructor(option, eventBus) {\n        this.eventBus = eventBus;\n        console.log('this.eventBus', eventBus, this.eventBus);\n        this.option = Object.assign(Object.assign({}, option), { $eventBus: eventBus });\n    }\n    subscribeEvents(...args) {\n        event_1.EventBus.prototype.addListener(...args);\n        const { eventBus } = this;\n        const { onLaunch, onUnload } = this.option;\n        this.option.onLaunch = function (...onLaunchArgs) {\n            eventBus.addListener(...args);\n            onLaunch === null || onLaunch === void 0 ? void 0 : onLaunch.call(this, ...onLaunchArgs);\n        };\n        return this;\n    }\n    create() {\n        return App(this.option);\n    }\n}\nclass ChainPage {\n    constructor(option, eventBus) {\n        this.eventBus = eventBus;\n        this.option = option;\n    }\n    subscribeEvents(...args) {\n        const { eventBus } = this;\n        const { onLoad, onUnload } = this.option;\n        this.option.onLoad = function (...onLoadArgs) {\n            eventBus.addListener(...args);\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad.call(this, ...onLoadArgs);\n        };\n        this.option.onUnload = function (...onLoadArgs) {\n            eventBus.removeListener(...args);\n            onUnload === null || onUnload === void 0 ? void 0 : onUnload.call(this, ...onLoadArgs);\n        };\n        return this;\n    }\n    create() {\n        return Page(this.option);\n    }\n}\nclass ChainComponent {\n    constructor(option, eventBus) {\n        this.eventBus = eventBus;\n        this.option = Object.assign(Object.assign({}, option), { $eventBus: eventBus });\n    }\n    subscribeEvents(...args) {\n        event_1.EventBus.prototype.addListener(...args);\n        const { eventBus, option } = this;\n        const { lifetimes } = option;\n        if (lifetimes === null || lifetimes === void 0 ? void 0 : lifetimes.attached) {\n            const originalAttached = lifetimes.attached;\n            lifetimes.attached = function (...attachArgs) {\n                const ret = originalAttached(...attachArgs);\n                eventBus.addListener(...args);\n                return ret;\n            };\n        }\n        if (lifetimes === null || lifetimes === void 0 ? void 0 : lifetimes.detached) {\n            const originalAttached = lifetimes.detached;\n            lifetimes.detached = function (...detachArgs) {\n                const ret = originalAttached(...detachArgs);\n                eventBus.removeListener(...args);\n                return ret;\n            };\n        }\n        return this;\n    }\n    create() {\n        return Page(this.option);\n    }\n}\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventBus = void 0;\nclass EventBus {\n    constructor(eventNames) {\n        this.pool = eventNames.reduce((acc, cur) => (Object.assign(Object.assign({}, acc), { [cur]: [] })), {});\n    }\n    clearEvent(eventName) {\n        this.pool[eventName].length = 0;\n    }\n    addListener(eventName, handler) {\n        this.pool[eventName].push(handler);\n        return () => this.removeListener(eventName, handler);\n    }\n    removeListener(eventName, handler) {\n        const handlers = this.pool[eventName];\n        const targetIndex = handlers.findIndex(h => h === handler);\n        handlers.splice(targetIndex, 1);\n    }\n    traverseListeners(eventName, visitor) {\n        this.pool[eventName].forEach(listener => {\n            visitor(listener);\n        });\n    }\n    emit(eventName, ...args) {\n        this.traverseListeners(eventName, function (listener) {\n            listener(...args);\n        });\n    }\n}\nexports.EventBus = EventBus;\n// export class EventBus<E extends EventPoolDefine> extends EventPool<E>{\n//   public constructor(eventNames: Keys<E>){\n//     super(eventNames)\n//     console.log('this', this)\n//   }\n//   public emit<K extends keyof E>(eventName: K, args: Parameters<E[K]> ){\n//     this.traverseListeners(eventName, function(listener){\n//       listener(args)\n//     })\n//   }\n// }\n// setup<{onIncrease: (n: number) => void}>({\n//   events: ['onIncrease']\n// })\n"]}